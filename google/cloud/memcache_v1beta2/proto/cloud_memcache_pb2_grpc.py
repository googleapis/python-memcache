# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.cloud.memcache_v1beta2.proto import (
    cloud_memcache_pb2 as google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2,
)
from google.longrunning import (
    operations_pb2 as google_dot_longrunning_dot_operations__pb2,
)


class CloudMemcacheStub(object):
    """Configures and manages Cloud Memorystore for Memcached instances.


    The `memcache.googleapis.com` service implements the Google Cloud Memorystore
    for Memcached API and defines the following resource model for managing
    Memorystore Memcached (also called Memcached below) instances:
    * The service works with a collection of cloud projects, named: `/projects/*`
    * Each project has a collection of available locations, named: `/locations/*`
    * Each location has a collection of Memcached instances, named:
    `/instances/*`
    * As such, Memcached instances are resources of the form:
    `/projects/{project_id}/locations/{location_id}/instances/{instance_id}`

    Note that location_id must be refering to a GCP `region`; for example:
    * `projects/my-memcached-project/locations/us-central1/instances/my-memcached`
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListInstances = channel.unary_unary(
            "/google.cloud.memcache.v1beta2.CloudMemcache/ListInstances",
            request_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ListInstancesRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ListInstancesResponse.FromString,
        )
        self.GetInstance = channel.unary_unary(
            "/google.cloud.memcache.v1beta2.CloudMemcache/GetInstance",
            request_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.GetInstanceRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.Instance.FromString,
        )
        self.CreateInstance = channel.unary_unary(
            "/google.cloud.memcache.v1beta2.CloudMemcache/CreateInstance",
            request_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.CreateInstanceRequest.SerializeToString,
            response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
        self.UpdateInstance = channel.unary_unary(
            "/google.cloud.memcache.v1beta2.CloudMemcache/UpdateInstance",
            request_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.UpdateInstanceRequest.SerializeToString,
            response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
        self.UpdateParameters = channel.unary_unary(
            "/google.cloud.memcache.v1beta2.CloudMemcache/UpdateParameters",
            request_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.UpdateParametersRequest.SerializeToString,
            response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
        self.DeleteInstance = channel.unary_unary(
            "/google.cloud.memcache.v1beta2.CloudMemcache/DeleteInstance",
            request_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.DeleteInstanceRequest.SerializeToString,
            response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
        self.ApplyParameters = channel.unary_unary(
            "/google.cloud.memcache.v1beta2.CloudMemcache/ApplyParameters",
            request_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ApplyParametersRequest.SerializeToString,
            response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )


class CloudMemcacheServicer(object):
    """Configures and manages Cloud Memorystore for Memcached instances.


    The `memcache.googleapis.com` service implements the Google Cloud Memorystore
    for Memcached API and defines the following resource model for managing
    Memorystore Memcached (also called Memcached below) instances:
    * The service works with a collection of cloud projects, named: `/projects/*`
    * Each project has a collection of available locations, named: `/locations/*`
    * Each location has a collection of Memcached instances, named:
    `/instances/*`
    * As such, Memcached instances are resources of the form:
    `/projects/{project_id}/locations/{location_id}/instances/{instance_id}`

    Note that location_id must be refering to a GCP `region`; for example:
    * `projects/my-memcached-project/locations/us-central1/instances/my-memcached`
    """

    def ListInstances(self, request, context):
        """Lists Instances in a given project and location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetInstance(self, request, context):
        """Gets details of a single Instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateInstance(self, request, context):
        """Creates a new Instance in a given project and location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateInstance(self, request, context):
        """Updates an existing Instance in a given project and location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateParameters(self, request, context):
        """Updates the defined Memcached Parameters for an existing Instance.
        This method only stages the parameters, it must be followed by
        ApplyParameters to apply the parameters to nodes of the Memcached Instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteInstance(self, request, context):
        """Deletes a single Instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ApplyParameters(self, request, context):
        """ApplyParameters will update current set of Parameters to the set of
        specified nodes of the Memcached Instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CloudMemcacheServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListInstances": grpc.unary_unary_rpc_method_handler(
            servicer.ListInstances,
            request_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ListInstancesRequest.FromString,
            response_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ListInstancesResponse.SerializeToString,
        ),
        "GetInstance": grpc.unary_unary_rpc_method_handler(
            servicer.GetInstance,
            request_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.GetInstanceRequest.FromString,
            response_serializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.Instance.SerializeToString,
        ),
        "CreateInstance": grpc.unary_unary_rpc_method_handler(
            servicer.CreateInstance,
            request_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.CreateInstanceRequest.FromString,
            response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
        ),
        "UpdateInstance": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateInstance,
            request_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.UpdateInstanceRequest.FromString,
            response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
        ),
        "UpdateParameters": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateParameters,
            request_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.UpdateParametersRequest.FromString,
            response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
        ),
        "DeleteInstance": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteInstance,
            request_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.DeleteInstanceRequest.FromString,
            response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
        ),
        "ApplyParameters": grpc.unary_unary_rpc_method_handler(
            servicer.ApplyParameters,
            request_deserializer=google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ApplyParametersRequest.FromString,
            response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "google.cloud.memcache.v1beta2.CloudMemcache", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class CloudMemcache(object):
    """Configures and manages Cloud Memorystore for Memcached instances.


    The `memcache.googleapis.com` service implements the Google Cloud Memorystore
    for Memcached API and defines the following resource model for managing
    Memorystore Memcached (also called Memcached below) instances:
    * The service works with a collection of cloud projects, named: `/projects/*`
    * Each project has a collection of available locations, named: `/locations/*`
    * Each location has a collection of Memcached instances, named:
    `/instances/*`
    * As such, Memcached instances are resources of the form:
    `/projects/{project_id}/locations/{location_id}/instances/{instance_id}`

    Note that location_id must be refering to a GCP `region`; for example:
    * `projects/my-memcached-project/locations/us-central1/instances/my-memcached`
    """

    @staticmethod
    def ListInstances(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.memcache.v1beta2.CloudMemcache/ListInstances",
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ListInstancesRequest.SerializeToString,
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ListInstancesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetInstance(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.memcache.v1beta2.CloudMemcache/GetInstance",
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.GetInstanceRequest.SerializeToString,
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.Instance.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateInstance(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.memcache.v1beta2.CloudMemcache/CreateInstance",
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.CreateInstanceRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateInstance(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.memcache.v1beta2.CloudMemcache/UpdateInstance",
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.UpdateInstanceRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateParameters(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.memcache.v1beta2.CloudMemcache/UpdateParameters",
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.UpdateParametersRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteInstance(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.memcache.v1beta2.CloudMemcache/DeleteInstance",
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.DeleteInstanceRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ApplyParameters(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.memcache.v1beta2.CloudMemcache/ApplyParameters",
            google_dot_cloud_dot_memcache__v1beta2_dot_proto_dot_cloud__memcache__pb2.ApplyParametersRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
